<?php 

function thoe_import_10_5_bc_start() {
	$urls = array(
	    "https://en.wikipedia.org/wiki/10th_millennium_BC",
	    "https://en.wikipedia.org/wiki/9th_millennium_BC",
	    "https://en.wikipedia.org/wiki/8th_millennium_BC",
	    "https://en.wikipedia.org/wiki/7th_millennium_BC",
	    "https://en.wikipedia.org/wiki/6th_millennium_BC",
	    "https://en.wikipedia.org/wiki/5th_millennium_BC"
	 );
	
	drush_print("10_5_bc import starts");
	
	for ($i=5;$i<11;$i++) {
	  $url = "https://en.wikipedia.org/wiki/".$i."th_millennium_BC";
	  $style = array(
	      "name"=>"10_5_bc",
	      "page"=>"bigbang",
	      "data_in" => "ul",
	      "clues" => array(
	          "after"=>"h3",
	      ),
	      "ignore" => array(
	          "first" => "h2"
	      ),
	      "break" => array(
	          '12,000 years ago:'
	      ),
	      "millennium" => $i
	  );
	  
	  $html = file_get_html($url);
	  
	  // always remove $toc contents table
	  
	  $html->find('#toc',0)->outertext = "";
	  $html->load($html->save());
	  
	  $continue = true;
	  $k = 0;
	  foreach($html->find('#mw-content-text',0)->find("ul") as $ul) {
	    if($ul->parent()->getAttribute("id")!=="toc" 
	        && $continue 
	        && $ul->parent()->getAttribute("class")!=="hlist" 
	        && $ul->parent()->getAttribute("class")!=="plainlinks hlist navbar"  
	        && $ul->parent()->parent()->getAttribute("class")!=="navbox-list navbox-even hlist" 
	        && $ul->parent()->parent()->getAttribute("class")!=="navbox-list navbox-odd hlist"
	        && $ul->parent()->getAttribute("class")!=="plainlinks hlist navbar mini"
	      )
	    {
	      foreach ($ul->find("li") as $li) {
	        if($continue)
	        {
	          $break_on = $style["break"];
	          foreach ($break_on as $break_item) {
	              $str_item = strpos($li->innertext,$break_item);
	              if($str_item !== false) {
	                $continue = false;
	                break;
	              }
	          }
	          if($continue) {
	            $is_reference = strpos($li->innertext,"smallcaps");
	            if(!$is_reference) {
	              $k++;
// 	              dpm($li->innertext);
	              thoe_import_format_content($li->innertext,$style);
	            }

	          }
	        }
	      }
	    }
	  }
	  dpm($k);
	}
	
	
}