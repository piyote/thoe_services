<?php 

function thoe_import_1790_740_bc_start() {
	
// 	drush_print("40_19_c import starts");
	
	for ($i=1400;$i>740;$i-=10) {
// 	  $last_digit = substr($i,-1,1);
	  
// 	  switch ($last_digit) {
// 	  	case 1:
// 	  	  $suffix = "st";
// 	  	  break;
//   	  case 2:
//   	    $suffix = "nd";
//   	    break;
// 	    case 3:
// 	      $suffix = "rd";
//         break;

//       default:
//         $suffix = "th";
//         break;  
// 	  }
	  $suffix = "";
	  if($i%100==0) {
	    $suffix = "_(decade)";
	  }
	  
	  $url = "https://en.wikipedia.org/wiki/".$i."s_BC".$suffix;
// 	  dpm($url);
	  
	  $style = array(
	      "name"=>"1790_740_bc",
	      "page"=>"1790_740_bc",
	      "data_in" => "ul",
	      "clues" => array(
	          "after"=>"h3",
	      ),
	      "ignore" => array(
	          "first" => "h2"
	      ),
	      "break" => array(
	          'dont break ever. never.'
	      ),
	      "year" => $i
	  );
	  
	  $html = file_get_html($url);
	  
	  
	  // always remove $toc contents table
	  
	  $html->find('#toc',0)->outertext = "";
	  $html->load($html->save());
	  
	  $continue = true;
// 	  $k = 0;
	  foreach($html->find('#mw-content-text',0)->find("ul") as $ul) {
	    if($ul->parent()->getAttribute("id")!=="toc" 
	        && $continue 
	        && $ul->parent()->getAttribute("class")!=="hlist" 
	        && $ul->parent()->getAttribute("class")!=="plainlist" 
	        && $ul->parent()->getAttribute("class")!=="plainlinks hlist navbar"  
	        && $ul->parent()->parent()->getAttribute("class")!=="navbox-list navbox-even hlist" 
	        && $ul->parent()->parent()->getAttribute("class")!=="navbox-list navbox-odd hlist"
	        && $ul->parent()->getAttribute("class")!=="plainlinks hlist navbar mini"
	      )
	    {
	      foreach ($ul->find("li") as $li) {
	        if($continue)
	        {
	          $break_on = $style["break"];
	          foreach ($break_on as $break_item) {
	              $str_item = strpos($li->innertext,$break_item);
	              if($str_item !== false) {
	                $continue = false;
	                break;
	              }
	          }
	          if($continue) {
	            $is_reference = strpos($li->innertext,"smallcaps");
	            $is_bio = strpos($li->innertext,"cite id");
	            if(!$is_reference && !$is_bio) {
// 	              $k++;
                $title = strip_tags($li->innertext);
                $title = trim($title);
                if($title!="" && $title!=" ") {
//                   dpm($title);
                  //dpm($title);
                  thoe_import_format_content($title,$style);
                }
	              
	            }

	          }
	        }
	      }
	    }
	  }
// 	  dpm($k);
	}
	
	
}