<?php 

function thoe_import_menu() {
  $items = array();
  
  $items['thoe/import'] = array( 
      'title' => 'Data crawler', 
      'description' => 'Crawl data',
      'page callback' => 'thoe_import_main',
      'access callback' => TRUE
  );
  
  return $items;
}

function thoe_import_main() {
  print "test";
}

function thoe_import_format_content($content,$style) {
  
  switch ($style["name"]) {
  	case "all_in_one":
  	  $parts = explode(":",$content);
  	  $time = $parts[0];
  	  $time_data = thoe_import_time_define($time);
  	  
  	  // get time and abbrevation
  	  $time = $time_data["time"];
  	  $abbrevation = $time_data["abbrevation"];
  	  
  	  drush_print("TIME");
  	  drush_print("*******************");
  	  drush_print($time. " ". $abbrevation);
  	  drush_print(" ");
  	  
  	  // get title
  	  $title = $parts[1];
  	  
  	  // get description
  	  array_shift($parts);
  	  array_shift($parts);
  	  if(count($parts)>0) {
  	    $desc = implode(".",$parts);
  	  }
  	  else {
  	    $len = strlen(strip_tags($title));
  	    if($len>50) {
  	      $new_title = truncate_utf8(strip_tags($title),50,true,false);
  	      $new_desc = str_replace($new_title,"",strip_tags($title));
  	      
  	      $title = $new_title;
  	      $desc = $new_desc;
  	    }
  	  }
  	  
  	  //get categories
  	  $categories = opencalais_thoe_get_tags($title . " " . $desc);
  	  
  	  // get image
  	  $image_url = thoe_import_get_image($title);
  	  
  	  // get the videos
  	  $videos = thoe_youtube_api_search($title);
  	  
  	  // get the books
  	  $books = thoe_import_get_google_books($title);
  	  
  	  drush_print("TITLE");
  	  drush_print("*******************");
  	  drush_print($title);
  	  drush_print(" ");
  	  
  	  drush_print("DESCRIPTION");
  	  drush_print("*******************");
  	  drush_print($desc);
  	  drush_print(" ");
  	  
  	  drush_print("BOOKS");
  	  drush_print("*******************");
  	  print_r($books);
  	  drush_print(" ");
  	  
  	  drush_print("VIDEOS");
  	  drush_print("*******************");
  	  print_r($videos);
  	  drush_print(" ");
  	  
  	  drush_print("IMAGE");
  	  drush_print("*******************");
  	  print_r($image_url);
  	  drush_print(" ");
  	  
  	  drush_print("CATEGORIES");
  	  drush_print("*******************");
  	  print_r($categories);
  	  drush_print(" ");
  	  
  	  break;
  	
  }
  
}

// not using this
function thoe_import_get_goodreads_books($title) {
  $title = strip_tags($title);
  $results = goodreads_book_search($title,'title',1,1);
  $best_books_all = $results['results']['work'];
  $best_books = array_slice($best_books_all,0,5);
  
  $results = array();
  foreach ($best_books as $book) {
  	$results[] = $book['best_book'];
  }
  
  return $results;
}

function thoe_import_get_google_books($title,$lang="en") {
  $title = strip_tags($title);
  // for more info: https://developers.google.com/books/docs/v1/using#PerformingSearch
  $google_api_key = "AIzaSyBHBN9EvpOH2Cpbup_ktQNXAzj6-8qe0ZI";
  $cx = "018281177569452009831:a94jredrj7a";
  $end_url = "https://www.googleapis.com/books/v1/volumes";
  $data = array(
      "q" => urlencode(strip_tags($title)),
      "langRestrict" => $lang,
      "key" => $google_api_key,
      "maxResults" => 5
  );
  
  $full_url = url($end_url, array('query' => $data));
  $google_result = drupal_http_request($full_url);
  $books = array();
  if ($google_result->code==200) {
    $data = json_decode($google_result->data);
    foreach ($data->items as $item) {
    	$books[] = $item; 
    }
  }
  else {
    return false;
  }
  return $books;
}

function thoe_import_time_define($time) {
  $abbrevation=="";
  $time = str_replace("ca. ","",$time);
  $time = preg_replace("/\(.*\)/","",$time);
  
  if($time == "0 seconds ") {
    $time = 0;
    $abbrevation = "zero";
  }
  
  // check if million years
  preg_match('/(.*) million year/', $time, $matches, PREG_OFFSET_CAPTURE);
  if($matches[0][0] && $abbrevation=="") {
    $time = $matches[1][0];
    $abbrevation = "ma";
  }
  
  // check if billion years
  preg_match('/(.*) billion year/', $time, $matches, PREG_OFFSET_CAPTURE);
  if($matches[0][0] && $abbrevation=="") {
    $time = $matches[1][0];
    $abbrevation = "ga";
  }
  
  // check if it's a neg abbrevation time
  preg_match('/(.*)<sup>âˆ’(.*)<\/sup> seconds/', $time, $matches, PREG_OFFSET_CAPTURE);
  if($matches[1][0] && $matches[2][0])
  {
    $abbrevation = "neg";
    $time = $matches[2][0];
  }
  
  // check if seconds
  preg_match('/(.*) second/', $time, $matches, PREG_OFFSET_CAPTURE);
  if($matches[0][0] && $abbrevation=="") {
    $time = $matches[1][0];
    $abbrevation = "sec";
  }
  
  // check if minutes
  preg_match('/(.*) minute/', $time, $matches, PREG_OFFSET_CAPTURE);
  if($matches[0][0] && $abbrevation=="") {
    $time = $matches[1][0];
    $abbrevation = "min";
  }
  
  // check if years
  preg_match('/(.*) year/', $time, $matches, PREG_OFFSET_CAPTURE);
  if($matches[0][0] && $abbrevation=="") {
    $time = $matches[1][0];
    $time = str_replace(",","",$time);
    $million = strpos($time,"million");
    $billion = strpos($time,"billion");
    if(!$million && !$billion)
    {
      if($time % 1000 == 0) {
        $time = $time/1000;
        $abbrevation = "ka";
      }
      else {
        $abbrevation = "ye";
      }
    }
    
  }
  
  return array("time"=>$time,"abbrevation"=>$abbrevation);
}

function thoe_import_get_image($content) {
  $content = strip_tags($content);
  // first try wiki
  $wiki_url = 'https://en.wikipedia.org/w/api.php';
  $data = array(
      'action' => "query",
      'titles' => $content,
      'prop' => "pageimages",
      'format' => "json",
      'pithumbsize' => "500"
  );
  $source = "";
  $full_url = url($wiki_url, array('query' => $data));
  $wiki_result = drupal_http_request($full_url);
  $missing = true;
  if ($wiki_result->code==200) {
  	$data = json_decode($wiki_result->data);
  	$obj_attr = get_object_vars($data->query->pages);
  	  foreach ($obj_attr as $key=>$attr) {
  	    if(isset($attr->missing)) {
  	      break;
  	    }
  	    else if(isset($attr->thumbnail->source)) {
  	      $source = $attr->thumbnail->source;
  	      $missing = false;
  	    }
  	  }
  }
  
  // if wiki is not working, use google search: 
  if ($missing && $source=="") {
    $google_api_key = "AIzaSyBHBN9EvpOH2Cpbup_ktQNXAzj6-8qe0ZI";
    $cx = "018281177569452009831:a94jredrj7a";
    $end_url = "https://www.googleapis.com/customsearch/v1";
    $data = array(
    	"q" => urlencode($content),
      "num" => 1,
      "start" => 1,
      "imgSize" => "medium",
      "searchType" => "image",
      "filetype" => "jpg",
      "key" => $google_api_key,
      "cx" => $cx     
    );
    
    $full_url = url($end_url, array('query' => $data));
    $google_result = drupal_http_request($full_url);
    print_r($google_result);
    if ($google_result->code==200) {
      $data = json_decode($google_result->data);
      $source = $data->items[0]->link;
    }
  }
  $result = ($source!=="") ? $source : false;
  return $result;
}


























